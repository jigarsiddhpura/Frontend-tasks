{"id":"logic.js","dependencies":[{"name":"D:\\frontend tasks\\task 1\\package.json","includedInParent":true,"mtime":1665406102332}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// import 'regenerator-runtime/runtime';\n// import axios from 'axios';\n// const axios = import('axios').default;\n\n// const sendGetRequest = async () => {\n// \ttry {\n// \t\tconst response = await axios.get('https://jsonplaceholder.typicode.com/users')\n// \t\tconsole.log(response);\n// \t} catch (err) {\n// \t\tconsole.log(err);\n// \t}\n// };\n\n// sendGetRequest();\n\nvar sendGetRequest = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n                return response.json();\n              }).then(function (dataList) {\n                return appendData(dataList);\n              });\n            } catch (err) {\n              console.log(err);\n            }\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function sendGetRequest() {\n    return _ref.apply(this, arguments);\n  };\n}();\nsendGetRequest();\nfunction appendData(_x) {\n  return _appendData.apply(this, arguments);\n} // appendData(Object);\nfunction _appendData() {\n  _appendData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dataList) {\n    var html, i, id, name, username, email, street, suite, city, zipcode, lat, lng, phone, website, catchPhrase, bs;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            html = \"\";\n            for (i = 0; i < dataList.length; i++) {\n              html += \"<tr>\";\n              obj = dataList[i];\n              id = obj[\"id\"];\n              html += \"<td> \".concat(id, \" </td> \");\n              name = obj[\"name\"];\n              html += \"<td> \".concat(name, \" </td> \");\n              username = obj[\"username\"];\n              html += \"<td> \".concat(username, \" </td> \");\n              email = obj[\"email\"];\n              html += \"<td> \".concat(email, \" </td> \");\n              street = obj[\"address\"][\"street\"];\n              suite = obj[\"address\"][\"suite\"];\n              city = obj[\"address\"][\"city\"];\n              zipcode = obj[\"address\"][\"zipcode\"];\n              lat = obj[\"address\"][\"geo\"][\"lat\"];\n              lng = obj[\"address\"][\"geo\"][\"lng\"];\n              html += \"<td> \".concat(street, \",\").concat(suite, \",\").concat(city, \",\").concat(zipcode, \", Lat: \").concat(lat, \",Lng: \").concat(lng, \",  </td> \");\n              phone = obj[\"phone\"];\n              html += \"<td> \".concat(phone, \" </td> \");\n              website = obj[\"website\"];\n              html += \"<td> \".concat(website, \" </td> \");\n              name = obj[\"company\"][\"name\"];\n              catchPhrase = obj[\"company\"][\"catchPhrase\"];\n              bs = obj[\"company\"][\"bs\"];\n              html += \"<td> \".concat(name, \",\").concat(catchPhrase, \",\").concat(bs, \",  </td> \");\n              html += \"</tr>\";\n            }\n            document.getElementById(\"data\").innerHTML = html;\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _appendData.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":2,"column":47},"source":"logic.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"logic.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":0},"source":"logic.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":0},"source":"logic.js","original":{"line":1,"column":0}},{"generated":{"line":6,"column":0},"source":"logic.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"logic.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"logic.js","original":{"line":5,"column":0}},{"generated":{"line":10,"column":0},"source":"logic.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"logic.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"logic.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":0},"source":"logic.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":0},"source":"logic.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"logic.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"logic.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"logic.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"logic.js","original":{"line":16,"column":0}},{"generated":{"line":20,"column":4},"source":"logic.js","original":{"line":16,"column":6},"name":"sendGetRequest"},{"generated":{"line":20,"column":18},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":21,"column":2},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":21,"column":72},"source":"logic.js","original":{"line":16,"column":23}},{"generated":{"line":22,"column":4},"source":"logic.js","original":{"line":16,"column":23}},{"generated":{"line":23,"column":6},"source":"logic.js","original":{"line":16,"column":23}},{"generated":{"line":24,"column":8},"source":"logic.js","original":{"line":16,"column":23}},{"generated":{"line":25,"column":10},"source":"logic.js","original":{"line":16,"column":23}},{"generated":{"line":26,"column":12},"source":"logic.js","original":{"line":17,"column":1}},{"generated":{"line":26,"column":16},"source":"logic.js","original":{"line":17,"column":5}},{"generated":{"line":27,"column":14},"source":"logic.js","original":{"line":18,"column":2},"name":"fetch"},{"generated":{"line":27,"column":19},"source":"logic.js","original":{"line":18,"column":7}},{"generated":{"line":27,"column":20},"source":"logic.js","original":{"line":18,"column":8}},{"generated":{"line":27,"column":64},"source":"logic.js","original":{"line":18,"column":52}},{"generated":{"line":27,"column":65},"source":"logic.js","original":{"line":18,"column":53}},{"generated":{"line":27,"column":66},"source":"logic.js","original":{"line":19,"column":4},"name":"then"},{"generated":{"line":27,"column":70},"source":"logic.js","original":{"line":19,"column":8}},{"generated":{"line":27,"column":71},"source":"logic.js","original":{"line":19,"column":9}},{"generated":{"line":27,"column":81},"source":"logic.js","original":{"line":19,"column":9},"name":"response"},{"generated":{"line":27,"column":89},"source":"logic.js","original":{"line":19,"column":17}},{"generated":{"line":28,"column":16},"source":"logic.js","original":{"line":19,"column":17}},{"generated":{"line":28,"column":23},"source":"logic.js","original":{"line":19,"column":21},"name":"response"},{"generated":{"line":28,"column":31},"source":"logic.js","original":{"line":19,"column":29}},{"generated":{"line":28,"column":32},"source":"logic.js","original":{"line":19,"column":30},"name":"json"},{"generated":{"line":28,"column":36},"source":"logic.js","original":{"line":19,"column":34}},{"generated":{"line":28,"column":38},"source":"logic.js","original":{"line":19,"column":36}},{"generated":{"line":29,"column":14},"source":"logic.js","original":{"line":19,"column":36}},{"generated":{"line":29,"column":16},"source":"logic.js","original":{"line":19,"column":37}},{"generated":{"line":29,"column":17},"source":"logic.js","original":{"line":20,"column":4},"name":"then"},{"generated":{"line":29,"column":21},"source":"logic.js","original":{"line":20,"column":8}},{"generated":{"line":29,"column":22},"source":"logic.js","original":{"line":20,"column":9}},{"generated":{"line":29,"column":32},"source":"logic.js","original":{"line":20,"column":9},"name":"dataList"},{"generated":{"line":29,"column":40},"source":"logic.js","original":{"line":20,"column":17}},{"generated":{"line":30,"column":16},"source":"logic.js","original":{"line":20,"column":17}},{"generated":{"line":30,"column":23},"source":"logic.js","original":{"line":20,"column":21},"name":"appendData"},{"generated":{"line":30,"column":33},"source":"logic.js","original":{"line":20,"column":31}},{"generated":{"line":30,"column":34},"source":"logic.js","original":{"line":20,"column":32},"name":"dataList"},{"generated":{"line":30,"column":42},"source":"logic.js","original":{"line":20,"column":40}},{"generated":{"line":30,"column":43},"source":"logic.js","original":{"line":20,"column":41}},{"generated":{"line":31,"column":14},"source":"logic.js","original":{"line":20,"column":41}},{"generated":{"line":31,"column":16},"source":"logic.js","original":{"line":20,"column":42}},{"generated":{"line":32,"column":12},"source":"logic.js","original":{"line":21,"column":1}},{"generated":{"line":32,"column":13},"source":"logic.js","original":{"line":21,"column":2}},{"generated":{"line":32,"column":14},"source":"logic.js","original":{"line":21,"column":3}},{"generated":{"line":32,"column":21},"source":"logic.js","original":{"line":21,"column":10},"name":"err"},{"generated":{"line":32,"column":24},"source":"logic.js","original":{"line":21,"column":13}},{"generated":{"line":32,"column":26},"source":"logic.js","original":{"line":21,"column":15}},{"generated":{"line":33,"column":14},"source":"logic.js","original":{"line":22,"column":2},"name":"console"},{"generated":{"line":33,"column":21},"source":"logic.js","original":{"line":22,"column":9}},{"generated":{"line":33,"column":22},"source":"logic.js","original":{"line":22,"column":10},"name":"log"},{"generated":{"line":33,"column":25},"source":"logic.js","original":{"line":22,"column":13}},{"generated":{"line":33,"column":26},"source":"logic.js","original":{"line":22,"column":14},"name":"err"},{"generated":{"line":33,"column":29},"source":"logic.js","original":{"line":22,"column":17}},{"generated":{"line":33,"column":30},"source":"logic.js","original":{"line":22,"column":18}},{"generated":{"line":34,"column":12},"source":"logic.js","original":{"line":23,"column":1}},{"generated":{"line":35,"column":10},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":36,"column":10},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":37,"column":12},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":38,"column":8},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":39,"column":6},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":40,"column":4},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":41,"column":2},"source":"logic.js","original":{"line":23,"column":2}},{"generated":{"line":41,"column":3},"source":"logic.js","original":{"line":24,"column":1}},{"generated":{"line":42,"column":2},"source":"logic.js","original":{"line":24,"column":1}},{"generated":{"line":42,"column":18},"source":"logic.js","original":{"line":16,"column":6},"name":"sendGetRequest"},{"generated":{"line":42,"column":32},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":43,"column":4},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":44,"column":2},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":45,"column":0},"source":"logic.js","original":{"line":16,"column":20}},{"generated":{"line":45,"column":3},"source":"logic.js","original":{"line":24,"column":1}},{"generated":{"line":46,"column":0},"source":"logic.js","original":{"line":25,"column":0},"name":"sendGetRequest"},{"generated":{"line":46,"column":14},"source":"logic.js","original":{"line":25,"column":14}},{"generated":{"line":46,"column":16},"source":"logic.js","original":{"line":25,"column":16}},{"generated":{"line":47,"column":0},"source":"logic.js","original":{"line":25,"column":17}},{"generated":{"line":47,"column":9},"source":"logic.js","original":{"line":28,"column":15},"name":"appendData"},{"generated":{"line":47,"column":19},"source":"logic.js","original":{"line":28,"column":25}},{"generated":{"line":48,"column":2},"source":"logic.js","original":{"line":28,"column":25}},{"generated":{"line":49,"column":0},"source":"logic.js","original":{"line":28,"column":25}},{"generated":{"line":49,"column":2},"source":"logic.js","original":{"line":72,"column":0}},{"generated":{"line":50,"column":0},"source":"logic.js","original":{"line":72,"column":0}},{"generated":{"line":51,"column":2},"source":"logic.js","original":{"line":72,"column":0}},{"generated":{"line":51,"column":75},"source":"logic.js","original":{"line":28,"column":0}},{"generated":{"line":51,"column":93},"source":"logic.js","original":{"line":28,"column":26},"name":"dataList"},{"generated":{"line":51,"column":101},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":52,"column":4},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":53,"column":4},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":54,"column":6},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":55,"column":8},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":56,"column":10},"source":"logic.js","original":{"line":28,"column":34}},{"generated":{"line":57,"column":12},"source":"logic.js","original":{"line":29,"column":5},"name":"html"},{"generated":{"line":57,"column":16},"source":"logic.js","original":{"line":29,"column":9}},{"generated":{"line":58,"column":12},"source":"logic.js","original":{"line":31,"column":1}},{"generated":{"line":58,"column":17},"source":"logic.js","original":{"line":31,"column":10},"name":"i"},{"generated":{"line":58,"column":18},"source":"logic.js","original":{"line":31,"column":11}},{"generated":{"line":58,"column":21},"source":"logic.js","original":{"line":31,"column":14}},{"generated":{"line":58,"column":22},"source":"logic.js","original":{"line":31,"column":15}},{"generated":{"line":58,"column":24},"source":"logic.js","original":{"line":31,"column":17},"name":"i"},{"generated":{"line":58,"column":25},"source":"logic.js","original":{"line":31,"column":18}},{"generated":{"line":58,"column":28},"source":"logic.js","original":{"line":31,"column":21},"name":"dataList"},{"generated":{"line":58,"column":36},"source":"logic.js","original":{"line":31,"column":29}},{"generated":{"line":58,"column":37},"source":"logic.js","original":{"line":31,"column":30},"name":"length"},{"generated":{"line":58,"column":43},"source":"logic.js","original":{"line":31,"column":36}},{"generated":{"line":58,"column":45},"source":"logic.js","original":{"line":31,"column":38},"name":"i"},{"generated":{"line":58,"column":46},"source":"logic.js","original":{"line":31,"column":39}},{"generated":{"line":58,"column":48},"source":"logic.js","original":{"line":31,"column":41}},{"generated":{"line":58,"column":50},"source":"logic.js","original":{"line":31,"column":43}},{"generated":{"line":59,"column":14},"source":"logic.js","original":{"line":32,"column":2},"name":"html"},{"generated":{"line":59,"column":18},"source":"logic.js","original":{"line":32,"column":6}},{"generated":{"line":59,"column":28},"source":"logic.js","original":{"line":32,"column":16}},{"generated":{"line":60,"column":14},"source":"logic.js","original":{"line":33,"column":2},"name":"obj"},{"generated":{"line":60,"column":17},"source":"logic.js","original":{"line":33,"column":5}},{"generated":{"line":60,"column":20},"source":"logic.js","original":{"line":33,"column":8},"name":"dataList"},{"generated":{"line":60,"column":28},"source":"logic.js","original":{"line":33,"column":16}},{"generated":{"line":60,"column":29},"source":"logic.js","original":{"line":33,"column":17},"name":"i"},{"generated":{"line":60,"column":30},"source":"logic.js","original":{"line":33,"column":18}},{"generated":{"line":60,"column":31},"source":"logic.js","original":{"line":33,"column":19}},{"generated":{"line":61,"column":14},"source":"logic.js","original":{"line":35,"column":6},"name":"id"},{"generated":{"line":61,"column":16},"source":"logic.js","original":{"line":35,"column":8}},{"generated":{"line":61,"column":19},"source":"logic.js","original":{"line":35,"column":11},"name":"obj"},{"generated":{"line":61,"column":22},"source":"logic.js","original":{"line":35,"column":14}},{"generated":{"line":61,"column":23},"source":"logic.js","original":{"line":35,"column":15}},{"generated":{"line":61,"column":27},"source":"logic.js","original":{"line":35,"column":19}},{"generated":{"line":61,"column":28},"source":"logic.js","original":{"line":35,"column":20}},{"generated":{"line":62,"column":14},"source":"logic.js","original":{"line":36,"column":2},"name":"html"},{"generated":{"line":62,"column":18},"source":"logic.js","original":{"line":36,"column":6}},{"generated":{"line":62,"column":37},"source":"logic.js","original":{"line":36,"column":18},"name":"id"},{"generated":{"line":62,"column":39},"source":"logic.js","original":{"line":36,"column":20}},{"generated":{"line":62,"column":51},"source":"logic.js","original":{"line":36,"column":29}},{"generated":{"line":63,"column":14},"source":"logic.js","original":{"line":38,"column":6},"name":"name"},{"generated":{"line":63,"column":18},"source":"logic.js","original":{"line":38,"column":10}},{"generated":{"line":63,"column":21},"source":"logic.js","original":{"line":38,"column":13},"name":"obj"},{"generated":{"line":63,"column":24},"source":"logic.js","original":{"line":38,"column":16}},{"generated":{"line":63,"column":25},"source":"logic.js","original":{"line":38,"column":17}},{"generated":{"line":63,"column":31},"source":"logic.js","original":{"line":38,"column":23}},{"generated":{"line":63,"column":32},"source":"logic.js","original":{"line":38,"column":24}},{"generated":{"line":64,"column":14},"source":"logic.js","original":{"line":39,"column":2},"name":"html"},{"generated":{"line":64,"column":18},"source":"logic.js","original":{"line":39,"column":6}},{"generated":{"line":64,"column":37},"source":"logic.js","original":{"line":39,"column":18},"name":"name"},{"generated":{"line":64,"column":41},"source":"logic.js","original":{"line":39,"column":22}},{"generated":{"line":64,"column":53},"source":"logic.js","original":{"line":39,"column":31}},{"generated":{"line":65,"column":14},"source":"logic.js","original":{"line":41,"column":6},"name":"username"},{"generated":{"line":65,"column":22},"source":"logic.js","original":{"line":41,"column":14}},{"generated":{"line":65,"column":25},"source":"logic.js","original":{"line":41,"column":17},"name":"obj"},{"generated":{"line":65,"column":28},"source":"logic.js","original":{"line":41,"column":20}},{"generated":{"line":65,"column":29},"source":"logic.js","original":{"line":41,"column":21}},{"generated":{"line":65,"column":39},"source":"logic.js","original":{"line":41,"column":31}},{"generated":{"line":65,"column":40},"source":"logic.js","original":{"line":41,"column":32}},{"generated":{"line":66,"column":14},"source":"logic.js","original":{"line":42,"column":2},"name":"html"},{"generated":{"line":66,"column":18},"source":"logic.js","original":{"line":42,"column":6}},{"generated":{"line":66,"column":37},"source":"logic.js","original":{"line":42,"column":18},"name":"username"},{"generated":{"line":66,"column":45},"source":"logic.js","original":{"line":42,"column":26}},{"generated":{"line":66,"column":57},"source":"logic.js","original":{"line":42,"column":35}},{"generated":{"line":67,"column":14},"source":"logic.js","original":{"line":44,"column":6},"name":"email"},{"generated":{"line":67,"column":19},"source":"logic.js","original":{"line":44,"column":11}},{"generated":{"line":67,"column":22},"source":"logic.js","original":{"line":44,"column":14},"name":"obj"},{"generated":{"line":67,"column":25},"source":"logic.js","original":{"line":44,"column":17}},{"generated":{"line":67,"column":26},"source":"logic.js","original":{"line":44,"column":18}},{"generated":{"line":67,"column":33},"source":"logic.js","original":{"line":44,"column":25}},{"generated":{"line":67,"column":34},"source":"logic.js","original":{"line":44,"column":26}},{"generated":{"line":68,"column":14},"source":"logic.js","original":{"line":45,"column":2},"name":"html"},{"generated":{"line":68,"column":18},"source":"logic.js","original":{"line":45,"column":6}},{"generated":{"line":68,"column":37},"source":"logic.js","original":{"line":45,"column":18},"name":"email"},{"generated":{"line":68,"column":42},"source":"logic.js","original":{"line":45,"column":23}},{"generated":{"line":68,"column":54},"source":"logic.js","original":{"line":45,"column":32}},{"generated":{"line":69,"column":14},"source":"logic.js","original":{"line":47,"column":6},"name":"street"},{"generated":{"line":69,"column":20},"source":"logic.js","original":{"line":47,"column":12}},{"generated":{"line":69,"column":23},"source":"logic.js","original":{"line":47,"column":15},"name":"obj"},{"generated":{"line":69,"column":26},"source":"logic.js","original":{"line":47,"column":18}},{"generated":{"line":69,"column":27},"source":"logic.js","original":{"line":47,"column":19}},{"generated":{"line":69,"column":36},"source":"logic.js","original":{"line":47,"column":28}},{"generated":{"line":69,"column":37},"source":"logic.js","original":{"line":47,"column":29}},{"generated":{"line":69,"column":38},"source":"logic.js","original":{"line":47,"column":30}},{"generated":{"line":69,"column":46},"source":"logic.js","original":{"line":47,"column":38}},{"generated":{"line":69,"column":47},"source":"logic.js","original":{"line":47,"column":39}},{"generated":{"line":70,"column":14},"source":"logic.js","original":{"line":48,"column":6},"name":"suite"},{"generated":{"line":70,"column":19},"source":"logic.js","original":{"line":48,"column":11}},{"generated":{"line":70,"column":22},"source":"logic.js","original":{"line":48,"column":14},"name":"obj"},{"generated":{"line":70,"column":25},"source":"logic.js","original":{"line":48,"column":17}},{"generated":{"line":70,"column":26},"source":"logic.js","original":{"line":48,"column":18}},{"generated":{"line":70,"column":35},"source":"logic.js","original":{"line":48,"column":27}},{"generated":{"line":70,"column":36},"source":"logic.js","original":{"line":48,"column":28}},{"generated":{"line":70,"column":37},"source":"logic.js","original":{"line":48,"column":29}},{"generated":{"line":70,"column":44},"source":"logic.js","original":{"line":48,"column":36}},{"generated":{"line":70,"column":45},"source":"logic.js","original":{"line":48,"column":37}},{"generated":{"line":71,"column":14},"source":"logic.js","original":{"line":49,"column":6},"name":"city"},{"generated":{"line":71,"column":18},"source":"logic.js","original":{"line":49,"column":10}},{"generated":{"line":71,"column":21},"source":"logic.js","original":{"line":49,"column":13},"name":"obj"},{"generated":{"line":71,"column":24},"source":"logic.js","original":{"line":49,"column":16}},{"generated":{"line":71,"column":25},"source":"logic.js","original":{"line":49,"column":17}},{"generated":{"line":71,"column":34},"source":"logic.js","original":{"line":49,"column":26}},{"generated":{"line":71,"column":35},"source":"logic.js","original":{"line":49,"column":27}},{"generated":{"line":71,"column":36},"source":"logic.js","original":{"line":49,"column":28}},{"generated":{"line":71,"column":42},"source":"logic.js","original":{"line":49,"column":34}},{"generated":{"line":71,"column":43},"source":"logic.js","original":{"line":49,"column":35}},{"generated":{"line":72,"column":14},"source":"logic.js","original":{"line":50,"column":6},"name":"zipcode"},{"generated":{"line":72,"column":21},"source":"logic.js","original":{"line":50,"column":13}},{"generated":{"line":72,"column":24},"source":"logic.js","original":{"line":50,"column":16},"name":"obj"},{"generated":{"line":72,"column":27},"source":"logic.js","original":{"line":50,"column":19}},{"generated":{"line":72,"column":28},"source":"logic.js","original":{"line":50,"column":20}},{"generated":{"line":72,"column":37},"source":"logic.js","original":{"line":50,"column":29}},{"generated":{"line":72,"column":38},"source":"logic.js","original":{"line":50,"column":30}},{"generated":{"line":72,"column":39},"source":"logic.js","original":{"line":50,"column":31}},{"generated":{"line":72,"column":48},"source":"logic.js","original":{"line":50,"column":40}},{"generated":{"line":72,"column":49},"source":"logic.js","original":{"line":50,"column":41}},{"generated":{"line":73,"column":14},"source":"logic.js","original":{"line":51,"column":6},"name":"lat"},{"generated":{"line":73,"column":17},"source":"logic.js","original":{"line":51,"column":9}},{"generated":{"line":73,"column":20},"source":"logic.js","original":{"line":51,"column":12},"name":"obj"},{"generated":{"line":73,"column":23},"source":"logic.js","original":{"line":51,"column":15}},{"generated":{"line":73,"column":24},"source":"logic.js","original":{"line":51,"column":16}},{"generated":{"line":73,"column":33},"source":"logic.js","original":{"line":51,"column":25}},{"generated":{"line":73,"column":34},"source":"logic.js","original":{"line":51,"column":26}},{"generated":{"line":73,"column":35},"source":"logic.js","original":{"line":51,"column":27}},{"generated":{"line":73,"column":40},"source":"logic.js","original":{"line":51,"column":32}},{"generated":{"line":73,"column":41},"source":"logic.js","original":{"line":51,"column":33}},{"generated":{"line":73,"column":42},"source":"logic.js","original":{"line":51,"column":34}},{"generated":{"line":73,"column":47},"source":"logic.js","original":{"line":51,"column":39}},{"generated":{"line":73,"column":48},"source":"logic.js","original":{"line":51,"column":40}},{"generated":{"line":74,"column":14},"source":"logic.js","original":{"line":52,"column":6},"name":"lng"},{"generated":{"line":74,"column":17},"source":"logic.js","original":{"line":52,"column":9}},{"generated":{"line":74,"column":20},"source":"logic.js","original":{"line":52,"column":12},"name":"obj"},{"generated":{"line":74,"column":23},"source":"logic.js","original":{"line":52,"column":15}},{"generated":{"line":74,"column":24},"source":"logic.js","original":{"line":52,"column":16}},{"generated":{"line":74,"column":33},"source":"logic.js","original":{"line":52,"column":25}},{"generated":{"line":74,"column":34},"source":"logic.js","original":{"line":52,"column":26}},{"generated":{"line":74,"column":35},"source":"logic.js","original":{"line":52,"column":27}},{"generated":{"line":74,"column":40},"source":"logic.js","original":{"line":52,"column":32}},{"generated":{"line":74,"column":41},"source":"logic.js","original":{"line":52,"column":33}},{"generated":{"line":74,"column":42},"source":"logic.js","original":{"line":52,"column":34}},{"generated":{"line":74,"column":47},"source":"logic.js","original":{"line":52,"column":39}},{"generated":{"line":74,"column":48},"source":"logic.js","original":{"line":52,"column":40}},{"generated":{"line":75,"column":14},"source":"logic.js","original":{"line":53,"column":2},"name":"html"},{"generated":{"line":75,"column":18},"source":"logic.js","original":{"line":53,"column":6}},{"generated":{"line":75,"column":37},"source":"logic.js","original":{"line":53,"column":18},"name":"street"},{"generated":{"line":75,"column":43},"source":"logic.js","original":{"line":53,"column":24}},{"generated":{"line":75,"column":57},"source":"logic.js","original":{"line":53,"column":28},"name":"suite"},{"generated":{"line":75,"column":62},"source":"logic.js","original":{"line":53,"column":33}},{"generated":{"line":75,"column":76},"source":"logic.js","original":{"line":53,"column":37},"name":"city"},{"generated":{"line":75,"column":80},"source":"logic.js","original":{"line":53,"column":41}},{"generated":{"line":75,"column":94},"source":"logic.js","original":{"line":53,"column":45},"name":"zipcode"},{"generated":{"line":75,"column":101},"source":"logic.js","original":{"line":53,"column":52}},{"generated":{"line":75,"column":121},"source":"logic.js","original":{"line":53,"column":62},"name":"lat"},{"generated":{"line":75,"column":124},"source":"logic.js","original":{"line":53,"column":65}},{"generated":{"line":75,"column":143},"source":"logic.js","original":{"line":53,"column":74},"name":"lng"},{"generated":{"line":75,"column":146},"source":"logic.js","original":{"line":53,"column":77}},{"generated":{"line":75,"column":160},"source":"logic.js","original":{"line":53,"column":88}},{"generated":{"line":76,"column":14},"source":"logic.js","original":{"line":55,"column":6},"name":"phone"},{"generated":{"line":76,"column":19},"source":"logic.js","original":{"line":55,"column":11}},{"generated":{"line":76,"column":22},"source":"logic.js","original":{"line":55,"column":14},"name":"obj"},{"generated":{"line":76,"column":25},"source":"logic.js","original":{"line":55,"column":17}},{"generated":{"line":76,"column":26},"source":"logic.js","original":{"line":55,"column":18}},{"generated":{"line":76,"column":33},"source":"logic.js","original":{"line":55,"column":25}},{"generated":{"line":76,"column":34},"source":"logic.js","original":{"line":55,"column":26}},{"generated":{"line":77,"column":14},"source":"logic.js","original":{"line":56,"column":2},"name":"html"},{"generated":{"line":77,"column":18},"source":"logic.js","original":{"line":56,"column":6}},{"generated":{"line":77,"column":37},"source":"logic.js","original":{"line":56,"column":18},"name":"phone"},{"generated":{"line":77,"column":42},"source":"logic.js","original":{"line":56,"column":23}},{"generated":{"line":77,"column":54},"source":"logic.js","original":{"line":56,"column":32}},{"generated":{"line":78,"column":14},"source":"logic.js","original":{"line":58,"column":6},"name":"website"},{"generated":{"line":78,"column":21},"source":"logic.js","original":{"line":58,"column":13}},{"generated":{"line":78,"column":24},"source":"logic.js","original":{"line":58,"column":16},"name":"obj"},{"generated":{"line":78,"column":27},"source":"logic.js","original":{"line":58,"column":19}},{"generated":{"line":78,"column":28},"source":"logic.js","original":{"line":58,"column":20}},{"generated":{"line":78,"column":37},"source":"logic.js","original":{"line":58,"column":29}},{"generated":{"line":78,"column":38},"source":"logic.js","original":{"line":58,"column":30}},{"generated":{"line":79,"column":14},"source":"logic.js","original":{"line":59,"column":2},"name":"html"},{"generated":{"line":79,"column":18},"source":"logic.js","original":{"line":59,"column":6}},{"generated":{"line":79,"column":37},"source":"logic.js","original":{"line":59,"column":18},"name":"website"},{"generated":{"line":79,"column":44},"source":"logic.js","original":{"line":59,"column":25}},{"generated":{"line":79,"column":56},"source":"logic.js","original":{"line":59,"column":34}},{"generated":{"line":80,"column":14},"source":"logic.js","original":{"line":61,"column":6},"name":"name"},{"generated":{"line":80,"column":18},"source":"logic.js","original":{"line":61,"column":10}},{"generated":{"line":80,"column":21},"source":"logic.js","original":{"line":61,"column":13},"name":"obj"},{"generated":{"line":80,"column":24},"source":"logic.js","original":{"line":61,"column":16}},{"generated":{"line":80,"column":25},"source":"logic.js","original":{"line":61,"column":17}},{"generated":{"line":80,"column":34},"source":"logic.js","original":{"line":61,"column":26}},{"generated":{"line":80,"column":35},"source":"logic.js","original":{"line":61,"column":27}},{"generated":{"line":80,"column":36},"source":"logic.js","original":{"line":61,"column":28}},{"generated":{"line":80,"column":42},"source":"logic.js","original":{"line":61,"column":34}},{"generated":{"line":80,"column":43},"source":"logic.js","original":{"line":61,"column":35}},{"generated":{"line":81,"column":14},"source":"logic.js","original":{"line":62,"column":6},"name":"catchPhrase"},{"generated":{"line":81,"column":25},"source":"logic.js","original":{"line":62,"column":17}},{"generated":{"line":81,"column":28},"source":"logic.js","original":{"line":62,"column":20},"name":"obj"},{"generated":{"line":81,"column":31},"source":"logic.js","original":{"line":62,"column":23}},{"generated":{"line":81,"column":32},"source":"logic.js","original":{"line":62,"column":24}},{"generated":{"line":81,"column":41},"source":"logic.js","original":{"line":62,"column":33}},{"generated":{"line":81,"column":42},"source":"logic.js","original":{"line":62,"column":34}},{"generated":{"line":81,"column":43},"source":"logic.js","original":{"line":62,"column":35}},{"generated":{"line":81,"column":56},"source":"logic.js","original":{"line":62,"column":48}},{"generated":{"line":81,"column":57},"source":"logic.js","original":{"line":62,"column":49}},{"generated":{"line":82,"column":14},"source":"logic.js","original":{"line":63,"column":6},"name":"bs"},{"generated":{"line":82,"column":16},"source":"logic.js","original":{"line":63,"column":8}},{"generated":{"line":82,"column":19},"source":"logic.js","original":{"line":63,"column":11},"name":"obj"},{"generated":{"line":82,"column":22},"source":"logic.js","original":{"line":63,"column":14}},{"generated":{"line":82,"column":23},"source":"logic.js","original":{"line":63,"column":15}},{"generated":{"line":82,"column":32},"source":"logic.js","original":{"line":63,"column":24}},{"generated":{"line":82,"column":33},"source":"logic.js","original":{"line":63,"column":25}},{"generated":{"line":82,"column":34},"source":"logic.js","original":{"line":63,"column":26}},{"generated":{"line":82,"column":38},"source":"logic.js","original":{"line":63,"column":30}},{"generated":{"line":82,"column":39},"source":"logic.js","original":{"line":63,"column":31}},{"generated":{"line":83,"column":14},"source":"logic.js","original":{"line":64,"column":2},"name":"html"},{"generated":{"line":83,"column":18},"source":"logic.js","original":{"line":64,"column":6}},{"generated":{"line":83,"column":37},"source":"logic.js","original":{"line":64,"column":18},"name":"name"},{"generated":{"line":83,"column":41},"source":"logic.js","original":{"line":64,"column":22}},{"generated":{"line":83,"column":55},"source":"logic.js","original":{"line":64,"column":26},"name":"catchPhrase"},{"generated":{"line":83,"column":66},"source":"logic.js","original":{"line":64,"column":37}},{"generated":{"line":83,"column":80},"source":"logic.js","original":{"line":64,"column":41},"name":"bs"},{"generated":{"line":83,"column":82},"source":"logic.js","original":{"line":64,"column":43}},{"generated":{"line":83,"column":96},"source":"logic.js","original":{"line":64,"column":54}},{"generated":{"line":84,"column":14},"source":"logic.js","original":{"line":67,"column":2},"name":"html"},{"generated":{"line":84,"column":18},"source":"logic.js","original":{"line":67,"column":6}},{"generated":{"line":84,"column":29},"source":"logic.js","original":{"line":67,"column":17}},{"generated":{"line":85,"column":12},"source":"logic.js","original":{"line":69,"column":1}},{"generated":{"line":86,"column":12},"source":"logic.js","original":{"line":70,"column":1},"name":"document"},{"generated":{"line":86,"column":20},"source":"logic.js","original":{"line":70,"column":9}},{"generated":{"line":86,"column":21},"source":"logic.js","original":{"line":70,"column":10},"name":"getElementById"},{"generated":{"line":86,"column":35},"source":"logic.js","original":{"line":70,"column":24}},{"generated":{"line":86,"column":36},"source":"logic.js","original":{"line":70,"column":25}},{"generated":{"line":86,"column":42},"source":"logic.js","original":{"line":70,"column":31}},{"generated":{"line":86,"column":43},"source":"logic.js","original":{"line":70,"column":32}},{"generated":{"line":86,"column":44},"source":"logic.js","original":{"line":70,"column":33},"name":"innerHTML"},{"generated":{"line":86,"column":53},"source":"logic.js","original":{"line":70,"column":42}},{"generated":{"line":86,"column":56},"source":"logic.js","original":{"line":70,"column":45},"name":"html"},{"generated":{"line":86,"column":60},"source":"logic.js","original":{"line":70,"column":49}},{"generated":{"line":87,"column":10},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":88,"column":10},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":89,"column":12},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":90,"column":8},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":91,"column":6},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":92,"column":4},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":93,"column":2},"source":"logic.js","original":{"line":70,"column":50}},{"generated":{"line":93,"column":3},"source":"logic.js","original":{"line":71,"column":1}},{"generated":{"line":94,"column":2},"source":"logic.js","original":{"line":71,"column":1}},{"generated":{"line":95,"column":0},"source":"logic.js","original":{"line":71,"column":1}}],"sources":{"logic.js":"// import 'regenerator-runtime/runtime';\r\n// import axios from 'axios';\r\n// const axios = import('axios').default;\r\n\r\n// const sendGetRequest = async () => {\r\n// \ttry {\r\n// \t\tconst response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n// \t\tconsole.log(response);\r\n// \t} catch (err) {\r\n// \t\tconsole.log(err);\r\n// \t}\r\n// };\r\n\r\n// sendGetRequest();\r\n\r\nconst sendGetRequest = async () => {\r\n\ttry {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(dataList => appendData(dataList))\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\nsendGetRequest();\r\n\r\n\r\nasync function appendData(dataList) {\r\n\tlet html = ``;\r\n\r\n\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\thtml += `<tr>`;\r\n\t\tobj = dataList[i];\r\n\r\n\t\tvar id = obj[\"id\"];\r\n\t\thtml += `<td> ${id} </td> `;\r\n\r\n\t\tvar name = obj[\"name\"];\r\n\t\thtml += `<td> ${name} </td> `;\r\n\r\n\t\tvar username = obj[\"username\"];\r\n\t\thtml += `<td> ${username} </td> `;\r\n\r\n\t\tvar email = obj[\"email\"];\r\n\t\thtml += `<td> ${email} </td> `;\r\n\r\n\t\tvar street = obj[\"address\"][\"street\"];\r\n\t\tvar suite = obj[\"address\"][\"suite\"];\r\n\t\tvar city = obj[\"address\"][\"city\"];\r\n\t\tvar zipcode = obj[\"address\"][\"zipcode\"];\r\n\t\tvar lat = obj[\"address\"][\"geo\"][\"lat\"];\r\n\t\tvar lng = obj[\"address\"][\"geo\"][\"lng\"];\r\n\t\thtml += `<td> ${street},${suite},${city},${zipcode}, Lat: ${lat},Lng: ${lng},  </td> `;\r\n\r\n\t\tvar phone = obj[\"phone\"];\r\n\t\thtml += `<td> ${phone} </td> `;\r\n\r\n\t\tvar website = obj[\"website\"];\r\n\t\thtml += `<td> ${website} </td> `;\r\n\r\n\t\tvar name = obj[\"company\"][\"name\"];\r\n\t\tvar catchPhrase = obj[\"company\"][\"catchPhrase\"];\r\n\t\tvar bs = obj[\"company\"][\"bs\"];\r\n\t\thtml += `<td> ${name},${catchPhrase},${bs},  </td> `;\r\n\r\n\r\n\t\thtml += `</tr>`;\r\n\r\n\t}\r\n\tdocument.getElementById(\"data\").innerHTML = html;\r\n}\r\n// appendData(Object);\r\n"},"lineCount":null}},"error":null,"hash":"e255446e87a5de5deaa68bc04abc1610","cacheData":{"env":{}}}